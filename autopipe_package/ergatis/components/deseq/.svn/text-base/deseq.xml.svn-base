<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <state>incomplete</state>
        <name>DEseq</name>
        <!--Preprocessing-->
        <command>
            <type>RunUnixCommand</type>
            <name>Create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>Create temp directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;</arg>
        </command>
        <!--Processing-->
        <command>
            <type>RunUnixCommand</type>
            <name>Collate RNA-seq reads by phenotype</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/collate_counts_by_phenotype.pl</executable>
            <arg>$;INPUT_FILE$; $;SAMPLE_MATCHING_FILE$; $;OUTPUT_DIRECTORY$;/counts_by_replicate_phenotype.txt</arg>
            <param>
                <key>stderr</key>
                <value>$;OUTPUT_DIRECTORY$;/collate_by_phenotype.stderr</value>
            </param>
            <param>
                <key>stdout</key>
                <value>$;OUTPUT_DIRECTORY$;/collate_by_phenotype.stdout</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>DESeq</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/deseq.pl</executable>
            <param>
                <key>stderr</key>
                <value>$;OUTPUT_DIRECTORY$;/deseq.stderr</value>
            </param>
           <param>
                <key>stdout</key>
                <value>$;OUTPUT_DIRECTORY$;/deseq.stdout</value>
           </param>
           <arg>--r_path=$;R_EXEC$; --deseq_path=$;BIN_DIR$;/run_deseq.R --sample_counts=$;OUTPUT_DIRECTORY$;/counts_by_replicate_phenotype.txt --output_dir=$;OUTPUT_DIRECTORY$; --annotation=$;ANNOTATION_FILE$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create all counts list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>"all_counts.*"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;ALL_COUNTS_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create count stat list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>"count_stat"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;COUNT_STAT_OUTPUT_LIST$;</value>
            </param>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>create tiff list</name>
            <state>incomplete</state>
            <executable>$;BIN_DIR$;/create_list_file</executable>
            <param>  
                <key>--directory</key>
                <value>$;OUTPUT_DIRECTORY$;</value>
            </param>
            <param>  
                <key>--regex</key>
                <value>".*\.tiff"</value>
            </param>
            <param>  
                <key>--output_list</key>
                <value>$;TIFF_OUTPUT_LIST$;</value>
            </param>
        </command>
    </commandSet>
</commandSetRoot>
