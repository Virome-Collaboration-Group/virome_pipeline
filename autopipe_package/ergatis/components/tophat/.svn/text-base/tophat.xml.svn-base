<?xml version="1.0" encoding="UTF-8"?>

<commandSetRoot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation='commandSet.xsd'>
    <commandSet type="serial">
        <state>incomplete</state>
        <name>tophat workflow</name>
        <!--Preprocessing-->
        <command>
            <type>RunUnixCommand</type>
            <name>Create output directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;OUTPUT_DIRECTORY$;</arg>
        </command>
        <command>
            <type>RunUnixCommand</type>
            <name>Create temp directory</name>
            <state>incomplete</state>
            <executable>mkdir</executable>
            <arg>-p -m 777 $;TMP_DIR$;</arg>
        </command>

        <!--Processing-->
        <command>
            <!-- <type>RunUnixCommand</type> -->
            <type>RunDistributedCommand</type>
            <name>Invoke Tophat wrapper script</name>
            <state>incomplete</state>
            <!-- We cannot call the actual tophat binary because we need to somehow include the bowtie installation
            into the PATH. We therefore call a wrapper that performs some PATH environment variable manipulations.
            This will place the bowtie binaries into the PATH before Tophat invokes it. -->
            <executable>$;BIN_DIR$;/tophat.pl</executable>
            <param>
                <key>stderr</key>
                <value>$;OUTPUT_DIRECTORY$;/tophat_stderr</value>
            </param>
           <param>
                <key>stdout</key>
                <value>$;OUTPUT_DIRECTORY$;/tophat_stdout</value>
            </param>

            <arg>$;BOWTIE_EXEC_PATH$; $;SAMTOOLS_EXEC_PATH$; $;TOPHAT_EXEC$; -o $;OUTPUT_DIRECTORY$; -a $;MIN_ANCHOR$; -m $;SPLICE_MISMATCHES$; -i $;MIN_INTRON_LENGTH$; -I $;MAX_INTRON_LENGTH$; -g $;MAX_MULTIHITS$; -F $;MIN_ISOFORM_FRACTION$; -p $;NUMBER_THREADS$; -r $;MATE_INNER_DIST$; --mate-std-dev $;MATE_STD_DEV$; --segment-mismatches $;SEGMENT_MISMATCHES$; --segment-length $;SEGMENT_LENGTH$; --min-closure-exon $;MIN_CLOSURE_EXON$; --min-closure-intron $;MIN_CLOSURE_INTRON$; --max-closure-intron $;MAX_CLOSURE_INTRON$; --min-coverage-intron $;MIN_COVERAGE_INTRON$; --max-coverage-intron $;MAX_COVERAGE_INTRON$; --min-segment-intron $;MIN_SEGMENT_INTRON$; --max-segment-intron $;MAX_SEGMENT_INTRON$; $;OTHER_ARGS$; $;BOWTIE_INDEX_DIR$; $;READS1$; $;READS2$;</arg>
        </command>
    </commandSet>
</commandSetRoot>
