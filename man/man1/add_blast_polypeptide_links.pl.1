.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ADD_BLAST_POLYPEPTIDE_LINKS 1"
.TH ADD_BLAST_POLYPEPTIDE_LINKS 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
add_blast_polypeptide_links.pl \- Adds a BLAST analysis and associated analysisprops from a BSML file
to a chado database.  Does NOT load match features, only the analysis and attributes.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 add_blast_polypeptide_links.pl 
            \-\-bsml_list=/path/to/some_file.list
            \-\-database=entamoeba
            \-\-user=someuser
            \-\-password=somepass
            \-\-analysis_name=ber_analysis
          [ \-\-server=SYBTIGR
            \-\-skip_missing=0
            \-\-program=ber
            \-\-algorithm=ber
            \-\-sourcename=/some/path
            \-\-sequence_class=polypeptide
            \-\-log=/path/to/some.log
          ]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-bsml_list,\-b\fR
    Input \s-1BSML\s0 file list containing <Analysis> elements and input_of Sequence features.
.PP
\&\fB\-\-database,\-d\fR
    Sybase database name to connect to.
.PP
\&\fB\-\-user,\-u\fR
    User account with select, insert, and update privileges on the specified database.
.PP
\&\fB\-\-password,\-p\fR
    Password for user account specified.
.PP
\&\fB\-\-analysis_name,\-a\fR
    You need to pass the name of the analysis you want searched within the passed \s-1BSML\s0.
    This corresponds to the \s-1BSML\s0 Analysis.id value and is usually something like
    'wu\-blastp_analysis'
.PP
\&\fB\-\-sequence_class,\-e\fR
    Optional.  Can pass this to limit which \s-1BSML\s0 sequence element classes are considered.
    Entries in analysisfeature will only be created for these.
.PP
\&\fB\-\-sourcename,\-o\fR
    Optional.  For each analysis load the chado analysis.sourcename column needs to be
    loaded with a value.  By default, this will be pulled from the Attribute element
    with a 'name' attribute value of 'sourcename', but you can override this with a
    custom one here.  The sourcename analysisprop will still be loaded.
.PP
\&\fB\-\-program,\-r\fR
    Optional.  For each analysis load the chado analysis.program column needs to be
    loaded with a value.  By default, this will be pulled from the Attribute element
    with a 'name' attribute value of 'program', but you can override this with a
    custom one here.  The sourcename analysisprop (if present) will still be loaded.
.PP
\&\fB\-\-algorithm,\-g\fR
    Optional.  For each analysis load the chado analysis.algorithm column needs to be
    loaded with a value.  By default, this will be pulled from the Attribute element
    with a 'name' attribute value of 'algorithm', but you can override this with a
    custom one here.  The sourcename analysisprop (if present) will still be loaded.
.PP
\&\fB\-\-skip_missing,\-k\fR
    Optional.  By default, the script will fail if any input features are found within 
    the \s-1BSML\s0 that are not in the database.  Setting this skips these missing features
    and just puts a warning in the logs.  (default = 0)
.PP
\&\fB\-\-host,\-s\fR
    Optional.  MySQL server to connect to (default = localhost).
.PP
\&\fB\-\-log,\-l\fR 
    Log file
.PP
\&\fB\-\-help,\-h\fR
    This help message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
We usually use the Ergatis bsml2chado component to load analyses from \s-1BSML\s0 into a 
chado database instance.  For \s-1BLAST\s0 results, this involves the creation of feature
rows for qry/sbj/match elements, as well as featureloc coordinate information and
all the rows needed for scoring.  For some tools (like Manatee), most of this isn't
necessary.  They only need the \s-1BLAST\s0 analysis element loaded and links from each
of the polypeptides as 'input_of' the analysis.  This script does that.
.SH "INPUT"
.IX Header "INPUT"
Input can be a list file of \s-1BSML\s0 that is output from the Ergatis ber component.
Multiple list files can be concatenated together \- the script handles simultaneous
input from multiple, separate analyses as long as results aren't mixed within any
single file.
.SH "OUTPUT"
.IX Header "OUTPUT"
This script only produces file output if the \-\-log option is used.  In the database, it 
performs inserts on the analysis, analysisprop and analysisfeature tables.  All row 
identifiers are written to the log.
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Joshua Orvis
\&    jorvis@users.sf.net
.Ve
