.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CREATE_BSML_SCAFFOLDS 1"
.TH CREATE_BSML_SCAFFOLDS 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
create_bsml_scaffolds.pl \- Convert a tab\-delimited scaffold description file into a set of BSML scaffold documents.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 create_bsml_scaffolds.pl
      \-\-project=apx3
      \-\-annot_db=pva1 
      \-\-scaffold_file=pva1.scf
      \-\-id_repository=/usr/local/annotation/APX3/workflow/project_id_repository
      \-\-assembly_bsml_list=/usr/local/annotation/APX3/output_repository/legacy2bsml/7881_default/legacy2bsml.bsml.list
      \-\-organism_name=\*(L"Plasmodium vivax\*(R"
      \-\-organism_type=euk
    [ \-\-output_dir=. ]
    [ \-\-parse_gaps ]
    [ \-\-parse_only ]
    [ \-\-using_contig_ids ]
    [ \-\-scaffold_id_is_chromosome ]
    [ \-\-annot_server=SYBTIGR ]
    [ \-\-annot_username=user1 ]
    [ \-\-annot_password=password1 ]
    [ \-\-log_file=/path/to/file.log ]
    [ \-\-log_level=4 ]
    [ \-\-help ]
    [ \-\-man ]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\-\-project
    The name of the project for which to create the \s-1BSML\s0 scaffold documents.
.PP
\&\-\-scaffold_file
   The tab-delimited flat file that contains the descriptions of the scaffolds to be created.
.PP
\&\-\-id_repository
   A valid id repository.  See Ergatis::IdGenerator for details.
.PP
\&\-\-assembly_bsml_list
   The full path to the file that contains a list of all the assembly \s-1BSML\s0 files (e.g., the
   legacy2bsml.bsml.list file produced by the legacy2bsml process used to populate the chado
   comparative database that corresponds to \-\-project.)
.PP
\&\-\-organism_name
   The full name (\*(L"Genus species\*(R") of the organism to which the scaffolds should be assigned.
.PP
\&\-\-organism_type
   Either 'euk' or 'prok'; the type of \s-1TIGR\s0 annotation database used to store \-\-organism_name.
.PP
\&\-\-output_dir
   Where to write the scaffold \s-1BSML\s0 documents.
.PP
\&\-\-parse_gaps
   Use this option to specify that the gaps between contigs should be determined by the coordinates
   supplied in the \-\-scaffold_file.  If this option is not set then a uniform gap size of 100bp will
   be used to separate each pair of adjacent contigs/assemblies.  Note that the script will complain
   if the \-\-parse_gaps option is not given and the coordinates in the file do not match the 100bp
   gap assumption.
.PP
\&\-\-parse_only
   Parse the input file(s) and report any errors but don't create any \s-1BSML\s0 documents.
.PP
\&\-\-using_contig_ids
   Whether the scaffold file uses contig ids (clone_info.clone_name) instead of asmbl_ids.  
   If set to true then \-\-annot_username and \-\-annot_password must also be supplied.
.PP
\&\-\-scaffold_id_is_chromosome
   Use this option if the scaffold ids in the \-\-scaffold_file should be saved as the scaffold's
   chromosome in the \s-1BSML\s0 file.
.PP
\&\-\-annot_db
    The name of the \s-1TIGR\s0 annotation database from which to read the asmbl_id \-> clone_name mapping.
.PP
\&\-\-annot_server
    The name of the Sybase server that hosts \-\-annot_db
.PP
\&\-\-annot_username
    The name of a user with \s-1SELECT\s0 permissions on the database specified by \-\-annot_db
.PP
\&\-\-annot_password
    The database password for \-\-annot_username.
.PP
\&\-\-log_file
    Path to log file to be used by Ergatis::Logger;
.PP
\&\-\-log_level
    Ergatis::Logger log level.
.PP
\&\-\-help
    Displays the usage statement.   
.PP
\&\-\-man
    Displays this man page.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Convert a tab-delimited scaffold description file into a set of \s-1BSML\s0 scaffold documents.
.SH "INPUT"
.IX Header "INPUT"
The input \-\-scaffold_file should look like this:
.PP
\&\s-1SCF\s0 396	1	1	F	0	0	565852	0	565852
\&\s-1SCF\s0	399	1	2	F	0	0	260516	569852	830368
\&\s-1SCF\s0	402	2	1	F	0	0	162059	0	162059
\&\s-1SCF\s0	392	2	2	F	0	0	589976	165059	755035
\&\s-1SCF\s0	2922	3	1	R	0	0	533272	533272	0
\&\s-1SCF\s0	401	3	2	R	0	0	388176	927448	539272
\&\s-1SCF\s0	408	3	3	F	0	0	13965	928948	942913
\&\s-1SCF\s0	2920	3	4	F	0	0	35881	949913	985794
\&\s-1SCF\s0	412	3	5	F	0	0	10181	989794	999975
\&\s-1SCF\s0	422	3	6	F	0	0	10652	999975	1010627
.PP
The columns are tab-delimited (actually whitespace\-delimited) and they are interpreted as follows:
.PP
1. \s-1SCF\s0 \- This column always contains the string \*(L"\s-1SCF\s0\*(R".  This is a historical artifact.
2. contig_id \- The asmbl_id or clone_info.clone_name (if \-\-using_contig_ids) of an 
               assembly in the scaffold.
3. scaff_id \- The id of the scaffold to which this contig belongs.
4. scaff_order \- An integer that indicates the order of the contig in the scaffold, counting
                 from 1 at the 5' end of the scaffold sequence.
5. direction \- The orientation of the contig \- either 'F' for forward or 'R' for reverse.
6. gap_mean \- Mean size of the gap between this contig and the next; not currently used.
7. gap_std \- Standard deviation of the gap between this contig and the next; not currently used.
8. contig_len \- Length of the contig.
9. contig_start \- Location of the 5' end of the contig on the scaffold in chado interbase coordinates
                  (numbering from 0)
10. contig_end \- Location of the 3' end of the contig on the scaffold in chado interbase coordinates
                  (numbering from 0)
.SH "OUTPUT"
.IX Header "OUTPUT"
The script outputs a BSML-format scaffold file for each scaff_id in the \s-1INPUT\s0.
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Jonathan Crabtree
\&    crabtree@tigr.org
.Ve
