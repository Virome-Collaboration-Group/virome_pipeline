.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "LOAD_PHAGE_FINDER 1"
.TH LOAD_PHAGE_FINDER 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
load_phage_finder.pl \- Loads phage finder tab delimited output to sgc schema databases
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 load_phage_finder.pl
           \-\-input_file
           \-\-datatbase
           \-\-bcp_out_dir
           \-\-password_file
           \-\-ergatis_to_sgc_lookup
        [  \-\-no_load
           \-\-log
           \-\-debug
           \-\-help  ]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-input_file,\-i\fR
    \s-1REQUIRED\s0.  Tab delimited output file from phage finder run
.PP
\&\fB\-\-database,\-d\fR
    \s-1REQUIRED\s0.  Database to gather information from.  If bcp_out_dir is
    not specified, will load data to database automatically.
.PP
\&\fB\-\-bcp_out_dir,\-b\fR
    \s-1REQUIRED\s0.  Directory to write bcp files to.
.PP
\&\fB\-\-password_file,\-p\fR
    \s-1REQUIRED\s0. Tab delimited file containing username and password to 
    access the specified database.
.PP
.Vb 2
\&    Ex. 
\&    username    password
.Ve
.PP
\&\fB\-\-ergatis_to_sgc_lookup,\-e\fR
    \s-1REQUIRED\s0.  Since ergatis has requirements for feature ids, this may require the
    changing of some ids to run it through ergatis.  This will allow a map of
    temporary ergatis ids to ids specified in the sgc database.  Format is ergatis
    id followed by the corresponding sgc id separated by a tab.
.PP
.Vb 3
\&    Ex.
\&    ergatis.polypeptide.12    SGC_000354
\&    ergatis.assembly.1        SGC_000023
.Ve
.PP
\&\fB\-\-no_load,\-n\fR
    \s-1OPTIONAL\s0.  Flag.  Non-zero value will result in not loading the database.  Will
    only create bcp files that can be used to load the data later. If not specified,
    script will load.
.PP
\&\fB\-\-log,\-l\fR
    \s-1OPTIONAL\s0. Logfile. If no logfile is specified, prints logging 
    information to \s-1STDOUT\s0
.PP
\&\fB\-\-help,\-h\fR
    Print this message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 4
\&    This script is used to load ( or create bcp files for the loading of ) data
\&    generated by phage_finder.  Specifically, it was designed to load the tab
\&    delimited output of /usr/local/devel/ANNOTATION/phage_finder/bin/phage_finder_ergatis.pl.
\&    Other versions of phage_finder have not been tested.
.Ve
.SH "INPUT"
.IX Header "INPUT"
.Vb 1
\&    --input_file
.Ve
.PP
.Vb 1
\&    Input to this script is the tab delimited output of phage_finder_ergatis.pl.
.Ve
.PP
.Vb 2
\&    Ex.
\&    PKT2440.assembly.1  6181863 61.52   1738082 1776894 38813   Large   degenerate      N.D.    N.D.    N.D.    61.18   pseudo_D3       PKT2440.polypeptide.1961        PKT2440.polypeptide.4239        0       0       0       0       0       0       +       0       0       0
.Ve
.PP
.Vb 1
\&    for format description, see phage_finder_ergatis.pl or Derrick Fouts (dfouts@jcvi.org)
.Ve
.PP
.Vb 1
\&    --password_file
.Ve
.PP
.Vb 2
\&    This file should contain one line, a username and password separated by a tab.  
\&    These are used to access the database.
.Ve
.PP
.Vb 1
\&    --ergatis_to_sgc_lookup
.Ve
.PP
.Vb 3
\&    Tab delimited, multi-line file representing of a map of ergatis_ids used to 
\&    the corresponding sgc ids.  Using the example above, a document might look
\&    like this:
.Ve
.PP
.Vb 3
\&    Ex.
\&    PKT2440.assembly.1    1
\&    PKT2440.polypeptide.1961    ?????????????
.Ve
.SH "OUTPUT"
.IX Header "OUTPUT"
.Vb 2
\&    If the --bcp_out_dir is specfied, no data is loaded into
\&    the specfied database (but data is read from database).
.Ve
.PP
.Vb 3
\&    Instead, bcp files are stored in the --bcp_out_dir to
\&    be loaded later if necesary.  The format of bcp files is
\&    as follows:
.Ve
.PP
.Vb 2
\&    *** MORE INFORMATION TO FOLLOW ****
\&    not quite sure where the data is going yet.
.Ve
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Kevin Galens
\&    kgalens@tigr.org
.Ve
