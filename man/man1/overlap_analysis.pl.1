.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OVERLAP_ANALYSIS 1"
.TH OVERLAP_ANALYSIS 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 11
\& USAGE: overlap_analysis.pl
\&       --input_file=/path/to/some/gene_describing.bsml
\&       --output=/path/to/output.bsml
\&       --rna_bsml=/path/to/file1.bsml,/path/to/bsml.list
\&       --evidence_bsml=/path/to/evidence1.bsml,/path/to/evidence_bsml.list
\&     [ --flagged_overlaps_file=/path/to/flagged.file
\&       --overlap_cutoff=60
\&       --input_sequence_class=assembly
\&       --log=/path/to/file.log
\&       --help
\&     ]
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-input_file,\-i\fR
    A gene describing bsml document.  Will parse out Feature elements.
.PP
\&\fB\-\-output,\-o\fR
    The output bsml file
.PP
\&\fB\-\-rna_bsml,\-r\fR
    Bsml describing \s-1RNA\s0 predictions/models.
.PP
.Vb 3
\&    Can take in a comma separated list of bsml files or bsml lists.  Will determine the
\&    format of the file based on the extension (.bsml or .list). Can be gzipped
\&    and therefore contain .gz extension.
.Ve
.PP
\&\fB\-\-evidence_bsml,\-e\fR
    Bsml that holds alignment evidence (Blast/Ber and \s-1HMM\s0)
.PP
.Vb 3
\&    Takes a comma separated list of bsml files or bsml lists. Will determine the 
\&    format of the file based on the extension (.bsml or .list). Can be gzipped
\&    and therefore contain .gz extension.
.Ve
.PP
\&\fB\-\-flagged_overlaps_file,\-f\fR
    Output file containing information about the overlaps that could not be resolved.
.PP
\&\fB\-\-overlap_cutoff,\-c\fR
    The maximum allowed overlap (in nucleotides). Default = 60 nucleotides.
.PP
\&\fB\-\-input_sequence_class,\-s\fR
    Optional. Default = assembly.  The class of the parent sequence type
.PP
\&\fB\-\-log,\-l\fR
    Logfile.
.PP
\&\fB\-\-help,\-h\fR
    Print this message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 1
\& Finds overlaps between genes and between genes and RNAs. Will try to resolve the overlap:
.Ve
.PP
.Vb 8
\& 1. If two genes overlap more than the cutoff
\&   a. And one gene does not have evidence (as determined by input evidence bsml),
\&      the gene with no evidence is removed.
\&   b. If both genes have evidence, a line is printed to the flagged_overlaps_file
\&   c. If both genes have no evidence, a line is printed to the flagged_overlaps file
\& 2. If a gene overlaps an RNA (with any overlap)
\&   a. Remove gene if it has no evidence
\&   b. Print to flagged_overlaps_file if gene has evidence
.Ve
.SH "INPUT"
.IX Header "INPUT"
.Vb 4
\&  --input_file:
\&     Should be a gene describing bsml document. Will parse out Feature[@class="gene"] elements
\&     and compare the Interval-loc coordinates with other genes/RNAs with the same parent
\&     Sequence (based on id).
.Ve
.PP
.Vb 3
\&  --rna_bsml:
\&     An RNA describing bsml document. Parses Feature[@class="gene"] and looks for overlaps
\&     with genes
.Ve
.PP
.Vb 2
\&  --evidence_bsml:
\&     Bsml files describing sequence alignments from blast, ber, and hmm components
.Ve
.SH "OUTPUT"
.IX Header "OUTPUT"
.Vb 2
\&  Will produce a bsml file much like that provided in the --input_file, only with some
\&  genes removed due to overlaps.
.Ve
.PP
.Vb 2
\&  The flagged_overlaps_file will contain information about unresolved overlaps in the
\&  following format:
.Ve
.PP
.Vb 1
\&    feature_id1  type1  left1  right1  feature_id2  type2  left2  right2
.Ve
.PP
.Vb 1
\&  Where type is either gene or RNA
.Ve
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Kevin Galens
\&    kgalens@som.umaryland.edu
.Ve
