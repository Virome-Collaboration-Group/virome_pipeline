.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PREPARE_PAIRED_ENDS_FOR_VELVET 1"
.TH PREPARE_PAIRED_ENDS_FOR_VELVET 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
prepare_input_for_velvet.pl \- Will read in a file and run shuffle sequences (provided by velvlet)
    for any paired end. Will simply copy non\-paired end data into the output directory
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 11
\& USAGE: prepare_short_paired_input_for_velvet.pl
\&       --output_directory=/path/to/output_dir/
\&       --short_input_list=/path/to/paired_end_files.list
\&       --short_output_list=/path/to/short_reads.list
\&       --long_input_list=/path/to/long_paired_ends.list
\&       --long_output_list=/path/to/long_reads.list
\&       --velvet_path=/path/to/velvet_dir/
\&     [ --log=/path/to/file.log
\&       --debug=3
\&       --help
\&     ]
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-output_directory,\-o\fR
    Path to write the shuffled sequence files to.
.PP
\&\fB\-\-short_input_list,\-s\fR
    Value should be a list (or comma separated list of lists) that contains 2 files (in the same format)
    which represent paired end files. Accepts only fasta or fastq format.
.PP
\&\fB\-\-short_output_list,\-so\fR
    Will create a list of the short read output files
.PP
\&\fB\-\-long_input_list,\-l\fR
    Same as short input list, but these are for long reads (ex sanger, 454, etc.)
.PP
\&\fB\-\-long_output_list,\-lo\fR
    Sames as for short output list, but with long reads
.PP
\&\fB\-\-velvet_path,\-v\fR
    Path to velvet install dir
.PP
\&\fB\-\-log,\-L\fR
    Logfile.
.PP
\&\fB\-\-debug,\-d\fR
    1,2 or 3. Higher values more verbose.
.PP
\&\fB\-\-help,\-h\fR
    Print this message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 2
\&    The only reason the short and long need to be separated so we can make two output lists of 
\&    shuffled paired files so that these can be passed into run_velvet_optimiser.pl script separately.
.Ve
.SH "INPUT Input should be a list of two files. The two files should represent one runs paired end data. This script will run shuffleSequences.pl on it so it can be used as input into velvet."
.IX Header "INPUT Input should be a list of two files. The two files should represent one runs paired end data. This script will run shuffleSequences.pl on it so it can be used as input into velvet."
.SH "OUTPUT Will write two output lists, long_reads.list and short_reads.list."
.IX Header "OUTPUT Will write two output lists, long_reads.list and short_reads.list."
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Kevin Galens
\&    kgalens@gmail.com
.Ve
