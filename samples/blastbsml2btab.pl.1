.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BLASTBSML2BTAB 1"
.TH BLASTBSML2BTAB 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
blastbsml2btab.pl \- Converts blast bsml into btab
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 hmmpfam2bsml.pl 
        \-\-input=/path/to/somefile.blast.bsml
        \-\-output=/path/to/somefile.blast.btab
     [  \-\-log=/path/to/some.log
        \-\-debug=4 
        \-\-help
      ]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-input,\-i\fR 
    \s-1BSML\s0 file from blast run.
.PP
\&\fB\-\-output,\-o\fR 
    Output btab file
.PP
\&\fB\-\-debug,\-d\fR 
    Debug level.  Use a large number to turn on verbose debugging. 
.PP
\&\fB\-\-log,\-l\fR 
    Log file
.PP
\&\fB\-\-help,\-h\fR 
    This help message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 1
\&    This script is used to convert blast bsml into the btab format (described below)
.Ve
.SH "INPUT"
.IX Header "INPUT"
.Vb 2
\&    The input file to this script will be a blast bsml file.  Generally, in the format 
\&    shown here:
.Ve
.PP
<?xml version=\*(L"1.0\*(R"?>
.PP
<Bsml>
  <Definitions>
    <Sequences>
      <Sequence length=\*(L"57\*(R" class=\*(L"polypeptide\*(R" title=\*(L"stpe.polypeptide.254786074.1\*(R" id=\*(L"stpe.polypeptide.254786074.1\*(R" molecule=\*(L"aa\*(R">
        <Attribute name=\*(L"defline\*(R" content=\*(L"stpe.polypeptide.254786074.1\*(R"></Attribute>
        <Seq\-data\-import source=\*(L"/usr/local/projects/aengine/output_repository/translate_sequence/254740466_translate/i1/g1/stpe.polypeptide.254786074.1.fsa\*(R" identifier=\*(L"stpe.polypeptide.254786074.1\*(R" format=\*(L"fasta\*(R" id=\*(L"Bsml0\*(R"></Seq\-data\-import>
        <Link rel=\*(L"analysis\*(R" href=\*(L"#wu\-blastp_analysis\*(R" role=\*(L"input_of\*(R"></Link>
      </Sequence>
      <Sequence length=\*(L"57\*(R" class=\*(L"polypeptide\*(R" title=\*(L"hypothetical protein taxon:279808 {Staphylococcus haemolyticus \s-1JCSC1435\s0;} (exp=0; wgp=1; cg=1; closed=1; pub=1; rf_status=provisional;)\*(R" id=\*(L"\s-1RF_YP_252946\s0.1_70726032_NC_007168\*(R" molecule=\*(L"aa\*(R">
        <Attribute name=\*(L"primary_label\*(R" content=\*(L"RF|YP_252946.1|70726032|NC_007168\*(R"></Attribute>
        <Seq\-data\-import source=\*(L"AllGroup.niaa\*(R" identifier=\*(L"RF|YP_252946.1|70726032|NC_007168\*(R" format=\*(L"fasta\*(R" id=\*(L"Bsml1\*(R"></Seq\-data\-import>
      </Sequence>
    </Sequences>
    <Tables id=\*(L"BsmlTables\*(R">
    <Seq\-pair\-alignment refend=\*(L"57\*(R" compseq=\*(L"\s-1RF_YP_252946\s0.1_70726032_NC_007168\*(R" compxref=\*(L"AllGroup.niaa:RF|YP_252946.1|70726032|NC_0071
68\*(R" refseq=\*(L"stpe.polypeptide.254786074.1\*(R" refstart=\*(L"0\*(R" reflength=\*(L"57\*(R" class=\*(L"match\*(R" refxref=\*(L"/usr/local/projects/aengine/output_repositor
y/translate_sequence/254740466_translate/i1/g1/stpe.polypeptide.254786074.1.fsa:stpe.polypeptide.254786074.1\*(R" method=\*(L"\s-1BLASTP\s0\*(R">
        <Attribute name=\*(L"percent_coverage_compseq\*(R" content=\*(L"96.5\*(R"></Attribute>
        <Attribute name=\*(L"percent_coverage_refseq\*(R" content=\*(L"96.5\*(R"></Attribute>
        <Attribute name=\*(L"percent_identity\*(R" content=\*(L"66.1\*(R"></Attribute>
        <Attribute name=\*(L"percent_similarity\*(R" content=\*(L"82.1\*(R"></Attribute>
        <Seq\-pair\-run refcomplement=\*(L"0\*(R" runprob=\*(L"1.9e\-13\*(R" comppos=\*(L"0\*(R" refpos=\*(L"0\*(R" runlength=\*(L"55\*(R" compcomplement=\*(L"0\*(R" comprunlength=\*(L"55\*(R" run
score=\*(L"70.2\*(R">
          <Attribute name=\*(L"class\*(R" content=\*(L"match_part\*(R"></Attribute>
          <Attribute name=\*(L"p_value\*(R" content=\*(L"1.9e\-13\*(R"></Attribute>
          <Attribute name=\*(L"percent_coverage_compseq\*(R" content=\*(L"96.5\*(R"></Attribute>
          <Attribute name=\*(L"percent_coverage_refseq\*(R" content=\*(L"96.5\*(R"></Attribute>
          <Attribute name=\*(L"percent_identity\*(R" content=\*(L"66.1\*(R"></Attribute>
          <Attribute name=\*(L"percent_similarity\*(R" content=\*(L"82.1\*(R"></Attribute>
        </Seq\-pair\-run>
        <Link rel=\*(L"analysis\*(R" href=\*(L"#wu\-blastp_analysis\*(R" role=\*(L"computed_by\*(R"></Link>
      </Seq\-pair\-alignment>
      </Tables>
    </Definitions>
</Bsml>
.SH "OUTPUT"
.IX Header "OUTPUT"
.Vb 1
\&    The output btab file is a tab delimited file with the columns as described below:
.Ve
.PP
.Vb 21
\&    0: query_id
\&    1: ??
\&    2: query_length
\&    3: algorithm
\&    4: match (subject) db
\&    5: match id
\&    6: query start
\&    7: query stop
\&    8: match start
\&    9: match stop
\&    10: percent identity
\&    11: percent similarity
\&    12: score (raw)
\&    13: bit score
\&    14: ??
\&    15: match name
\&    16: blast frame (??)
\&    17: query strand
\&    18: subject protein length
\&    19: e-value
\&    20: p-value
.Ve
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Kevin Galens
\&    kgalens@som.umaryland.edu
.Ve
