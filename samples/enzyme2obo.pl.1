.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ENZYME2OBO 1"
.TH ENZYME2OBO 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
enzyme2obo.pl \- Reads an ExPASy release of Enzyme Commission data and converts to an OBO file.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 enzyme2obo.pl 
            \-\-dat_file=/path/to/enzyme.dat 
            \-\-class_file=/path/to/enzclass.txt
            \-\-output_file=/path/to/somefile.obo
          [ \-\-old_obo=/path/to/old_ec.obo ]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-dat_file\fR
    Input enzyme.dat file, provided by ExPASy.
.PP
\&\fB\-\-class_file\fR
    Input enzclass.txt file, provided by ExPASy.
.PP
\&\fB\-\-output_file\fR
    Output \s-1OBO\s0 file to be created.  If exists, it will be overwritten.
.PP
\&\fB\-\-old_obo\fR
    Optional.  If an existing \s-1OBO\s0 file for this exists the \s-1EC:\s0 IDs for terms will be maintained.
.PP
\&\fB\-\-log,\-l\fR 
    Log file
.PP
\&\fB\-\-help,\-h\fR
    This help message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script was written to provide a way of representing \s-1EC\s0 as an ontology, with the intent
of loading into a Chado database instance to support genome annotation.  Because of some
limitations in the cvterm table (or at least our usage of it) some modifications to the
source data had to be made.  For details see the \s-1OUTPUT\s0 section.
.SH "INPUT"
.IX Header "INPUT"
The currently  used line  types, along with their respective line codes, are listed below:
.PP
.Vb 9
\&   ID  Identification                         (Begins each entry; 1 per entry)
\&   DE  Description (official name)            (>=1 per entry)
\&   AN  Alternate name(s)                      (>=0 per entry)
\&   CA  Catalytic activity                     (>=1 per entry)
\&   CF  Cofactor(s)                            (>=0 per entry)
\&   CC  Comments                               (>=0 per entry)
\&   PR  Cross-references to PROSITE            (>=0 per entry)
\&   DR  Cross-references to Swiss-Prot         (>=0 per entry)
\&   //  Termination line                       (Ends each entry; 1 per entry)
.Ve
.PP
Note that if you're pointing this at a very old ec.obo file you'll get errors like:
.PP
.Vb 1
\&    A format problem has been detected (and ignored) in ...
.Ve
.PP
This may have to do with incorrect encoding of the 'def:' lines in the file.  They should
each end with [] symbols.  If not, fix it like this:
.PP
.Vb 1
\&    perl -i -pe 's|^(def\e:.+)|$1 \e[\e]|' ec.obo.old
.Ve
.SH "MAPPING"
.IX Header "MAPPING"
.Vb 7
\&    DAT file code           OBO file attribute
\&    -------------           ------------------
\&        ID                      xref_analog
\&        DE                      name
\&        AN                      synonym
\&        CA                      def
\&        CC                      comment
.Ve
.PP
All other code values are not currently mapped.
.PP
The full specification for the enzyme.dat file is provided here:
.PP
.Vb 1
\&    ftp://ftp.expasy.org/databases/enzyme/enzuser.txt
.Ve
.PP
The \s-1OBO\s0 Flat File format followed is defined here:
.PP
.Vb 1
\&    http://www.geneontology.org/GO.format.obo-1_2.shtml#S.2.2.3
.Ve
.SH "OUTPUT"
.IX Header "OUTPUT"
The output conforms to version 1.2 of the \s-1OBO\s0 specification, with example entries like:
.PP
.Vb 7
\&    [Term]
\&    id: EC:00000002
\&    name: UTP--xylose-1-phosphate uridylyltransferase.
\&    def: "UTP + alpha-D-xylose 1-phosphate = diphosphate + UDP-D-xylose." []
\&    synonym: "Xylose-1-phosphate uridylyltransferase." RELATED []
\&    xref: EC:2.7.7.11
\&    is_a: EC:00001637 ! Transferases. Transferring phosphorous-containing groups. Nucleotidyltransferases.
.Ve
.PP
Note that the values for all synonym scopes are '\s-1RELATED\s0'.  Because the enzyme.dat file doesn't
have an equivalent value for this I choose what I thought to be the safest assertion.  In 
reality, the scope '\s-1EXACT\s0' is probably the correct value for most.
.PP
Note that parental relationships (via is_a) are not defined for deleted or transferred entries.
This is because the parent entries may be completely removed from the collection, as was done
with 3.4.4.\-
.PP
The enzyme.dat file can define multiple synonyms within a stanza that are only different by
alphabetic case.  This causes the non-case-sensitive indexes in MySQL to fail when loading these
into an ontology, so I do a case-insensitive comparison of synonyms within a stanza and only
keep the first one where there are duplicates.
.Sh "Name value modifications"
.IX Subsection "Name value modifications"
Because the Chado schema restricts cvterm.name to be unique within a given controlled
vocabulary and is_obsolete status, the values of the \s-1DE\s0 lines in the enzyme.dat need to be
manipulated somewhat.
.PP
Because their definitions are curated to be fully descriptive and unique, full precision 
terms have names exported that are identical to their \s-1DE\s0 lines.  Each level above this, on
the other hand, has a name formed by the concatenation of their parents.  This conforms to 
the encoding strategy (manually curated) of these in the Gene Ontology.
.PP
Entries annotated as 'Deleted entry.' within the input set have the original \s-1EC\s0 number
appended to the end of the name in parentheses.
.PP
Entries annotated as Transferred entry: Y are renamed like Transferred entry: (X \-> Y), 
where X is the original \s-1EC\s0 number and Y is the new one.
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Joshua Orvis
\&    jorvis@som.umaryland.edu
.Ve
