.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HMMLS2BSML 1"
.TH HMMLS2BSML 1 "2010-10-22" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
hmmls2bsml.pl \- convert hmmpfam raw output to BSML
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\s-1USAGE:\s0 hmmls2bsml.pl 
        \-\-input=/path/to/somefile.hmmls.raw 
        \-\-output=/path/to/somefile.hmmls.bsml
        \-\-model_name=boxA_repeat
      [ \-\-search_method=hmmls
        \-\-query_mol_type=aa
        \-\-query_mol_class=polypeptide
        \-\-model_mol_type=aa
        \-\-model_mol_class=polypeptide
        \-\-fasta_input=/path/to/hmmls/input.fsa
        \-\-gzip_output=1
        \-\-log=/path/to/some.log
        \-\-debug=4 
        \-\-help
      ]
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-\-input,\-i\fR 
    Input raw alignment file from an hmmls search.
.PP
\&\fB\-\-output,\-o\fR 
    Output \s-1BSML\s0 file
.PP
\&\fB\-\-model_name,\-m\fR 
    Uniquename of the model searched. 
.PP
\&\fB\-\-query_mol_type,\-qt\fR 
    Query molecule type (like 'aa' or 'dna'). 
.PP
\&\fB\-\-query_mol_class,\-qc\fR 
    Query molecule type (like 'polypeptide' or '\s-1DNA\s0'). 
.PP
\&\fB\-\-model_mol_type,\-mt\fR 
    Model molecule type (like 'aa' or 'dna'). 
.PP
\&\fB\-\-model_mol_class,\-mc\fR 
    Query molecule type (like 'polypeptide' or '\s-1DNA\s0'). 
.PP
\&\fB\-\-fasta_input,\-f\fR
    Optional.  If included, will make a seq data import element and include the 
    defline with the sequences.
.PP
\&\fB\-\-gzip_output,\-g\fR
    Optional.  If given a non-zero value, will compress the output and give the output
    file a .gz extension.  If the file already contains one, it won't add another.
.PP
\&\fB\-\-debug,\-d\fR 
    Debug level.  Use a large number to turn on verbose debugging. 
.PP
\&\fB\-\-log,\-l\fR 
    Log file
.PP
\&\fB\-\-help,\-h\fR 
    This help message
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is used to convert the raw alignment output from an hmmls search into \s-1BSML\s0.
.SH "INPUT"
.IX Header "INPUT"
The input file passed to this script must be a raw alignment file generated by hmmls.
Define the input file using the \-\-input option.
.PP
Illegal characters will be removed from the IDs for the query sequence and subject hit
if necessary to create legal \s-1XML\s0 id names.  For each element, the original, unmodified 
name will be stored in the \*(L"title\*(R" attribute of the Sequence element.  You should make 
sure that your ids don't begin with a number.  This script will successfully create a 
\&\s-1BSML\s0 document regardless of your \s-1ID\s0 names, but the resulting document may not pass \s-1DTD\s0 
validation.
.SH "OUTPUT"
.IX Header "OUTPUT"
The \s-1BSML\s0 file to be created is defined using the \-\-output option.  If the file already exists
it will be overwritten.
.PP
Because the hmmls executable is used to perform a variety of searches, including hmmsmart
and hmmtigr, the user may pass a value using \-\-search_method, which will create the
appropriate titles in the \s-1BSML\s0 Analysis element.  If not passed, the default 'hmmls' is used.
.SH "CONTACT"
.IX Header "CONTACT"
.Vb 2
\&    Joshua Orvis
\&    jorvis@tigr.org
.Ve
